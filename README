Wenn ihr etwas verändert und pusht, bitte immer hier den Tag hinzufügen bzw. bei dem entsprechenden Tag mit eurem Namen schreiben, was ihr gemacht habt. Kann ruhig in chronologischer Reihenfolge sein, dass das neueste immer unten ist ;-)

Working with this repository:

"git clone git@github.com:Taifun/piswi-plugin.git"
Einmal in dem Verzeichnis, wo ihr das repo lokal speichern wollt.

Jedesmal vor Arbeitsbeginn
"git pull origin master"
um etwaige Änderungen von anderen zu laden.
Dann an den files arbeiten, sie erstellen/modifizieren/löschen, die entsprechenden Dateien mittels
"git add <filename>"
hinzufügen. Alternativ kann man auch ins Wurzelverzeichnis gehen und mittels 
"git add ." alle files und folder rekursiv auf einmal hinzufügen (eh nur die, die modifiziert wurden)
Dann mittels
git commit -m "<message>"
commiten und eine kurze message die sagt, welcher commit das ist (was neu ist) -> steht dann in github als message bei den veränderten files.
Als letztes mit
"git push origin master"
pushen, das sollte funktionieren.


Links:
	git:
	http://git.or.cz/course/svn.html
	http://spheredev.org/wiki/Git_for_the_lazy
	http://book.git-scm.com/index.html
	http://progit.org/book/de/ch3-3.html
	firefox-extension:
	http://www.borngeek.com/firefox/toolbar-tutorial/
	http://kb.mozillazine.org/Getting_started_with_extension_development#Registering_your_extension_in_the_Extension_Manager anleitung um lokal zu testen //wichtig: firefox nach Änderungen an den Dateien immer neustarten!
dieser link kann uns denk ich besonders helfen, in anbetracht dass wir mit HTTP-Requests arbeiten und dynamisch sein müssen:
	https://developer.mozilla.org/En/Creating_a_dynamic_status_bar_extension
	https://developer.mozilla.org/en/Dynamically_modifying_XUL-based_user_interface

Um mehrere Firefox-Instanzen nebeneinander laufen zu haben, kann mittels -no-remote gestartet werden. Um zB. nur das "dev" profil zu verwenden:
firefox -no-remote -P dev &
(auf linux..., geht aber auch auf windows)

-----------------------------------------------------------------------------

CHANGELOG

11.01.2010
	Moritz: created repository with basic folder structure
	Benjamin: XULs and basic overlay added, as well as filled in the .manifest and the .rdf
	Moritz:	changed install.rdf -> IMPORTANT: id now piswirequest@taifun21.homelinux.org
		removed dummyfile; 
		openprefs.js - renamed to request.js + added request-code
		sample.xul - added a button to test the request
12.01.2010
	Benjamin: added sarcasm to the piswilogo.
	Moritz: request.js - played with the responseText
	Moritz: request.js - cutting out first course works basically
13.01.2010
	Moritz: request.js - added request to display only my lvs with lecturer + mark
14.01.2010
	Richard: piswiprefs.xul - Modified the login preferences screen
15.01.2010
	Richard: piswiprefs.xul - Added some ID's to piswiprefs.xul and added a first test script to it
17.01.2010
	Moritz: request.js - parser now working on LVs with description + lecturer
19.01.2010
	Moritz: request.js - parser should work, adjusting XUL-interface properly now
	Moritz: sample.xul - clicking the button will send request and update popup
	Moritz: request.js - major bugfix in parser and request
20.01.2010
	Moritz: install.rdf - added options-url
	Moritz: request.js - added whole options functionality
	Moritz: created options.xul
21.01.2010
	Benjamin: Added Loader-GIF
	Moritz: moved image files to chrome/skin/ and adapted paths
	Moritz: chrome.manifest - added skin
		removed test-buttons
	Benjamin: due to a new Version of Firefox, our plugin is now compatible with it.
22.01.2010
	Moritz: install.rdf - added icon-url

TODO: bug in request if special characters in password
